/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src.com.mycompany.practica1.jframes;

import src.com.mycompany.practica1.tokens.Automata;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;

import java.io.FileWriter;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author Luis
 */
public class JFramePrincipal extends javax.swing.JFrame {

    /**
     * Creates new form JFramePrincipal
     */
    JFrameReportes reportes;

    //Constructor
    public JFramePrincipal() {
        initComponents();
        LinesEnumerator enumerador = new LinesEnumerator(AreaDeCarga);
        jScrollPane1.setRowHeaderView(enumerador);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cargaArchivoBoton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaDeCarga = new javax.swing.JTextArea();
        guardarArchivoBoton = new javax.swing.JButton();
        textoBuscar = new javax.swing.JTextField();
        buscarBoton = new javax.swing.JButton();
        analizarBoton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaTransicicion = new javax.swing.JTextArea();
        ReportesBoton = new javax.swing.JButton();
        limpiarTextButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analizador LÃ©xico");
        setBackground(new java.awt.Color(0, 153, 102));
        setResizable(false);

        cargaArchivoBoton.setBackground(new java.awt.Color(0, 153, 153));
        cargaArchivoBoton.setText("Cargar Archivo");
        cargaArchivoBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cargaArchivoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaArchivoBotonActionPerformed(evt);
            }
        });

        AreaDeCarga.setColumns(20);
        AreaDeCarga.setForeground(new java.awt.Color(0, 153, 153));
        AreaDeCarga.setRows(5);
        jScrollPane1.setViewportView(AreaDeCarga);

        guardarArchivoBoton.setBackground(new java.awt.Color(0, 153, 153));
        guardarArchivoBoton.setText("Guardar Archivo");
        guardarArchivoBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        guardarArchivoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarArchivoBotonActionPerformed(evt);
            }
        });

        textoBuscar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoBuscarActionPerformed(evt);
            }
        });

        buscarBoton.setBackground(new java.awt.Color(0, 153, 153));
        buscarBoton.setText("Buscar");
        buscarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBotonActionPerformed(evt);
            }
        });

        analizarBoton.setBackground(new java.awt.Color(0, 153, 153));
        analizarBoton.setText("Analizar Texto");
        analizarBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        analizarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarBotonActionPerformed(evt);
            }
        });

        textAreaTransicicion.setColumns(20);
        textAreaTransicicion.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        textAreaTransicicion.setForeground(new java.awt.Color(0, 153, 153));
        textAreaTransicicion.setRows(5);
        jScrollPane2.setViewportView(textAreaTransicicion);

        ReportesBoton.setBackground(new java.awt.Color(0, 153, 153));
        ReportesBoton.setText("Ver Reportes");
        ReportesBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ReportesBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportesBotonActionPerformed(evt);
            }
        });

        limpiarTextButton.setBackground(new java.awt.Color(0, 153, 153));
        limpiarTextButton.setText("Limpiar Texto");
        limpiarTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarTextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 100, Short.MAX_VALUE)
                        .addComponent(cargaArchivoBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(guardarArchivoBoton)
                        .addGap(360, 360, 360))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(textoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buscarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(limpiarTextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(analizarBoton, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ReportesBoton)
                        .addGap(222, 222, 222))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(30, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarBoton)
                    .addComponent(textoBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(analizarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addComponent(limpiarTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(20, 20, 20)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargaArchivoBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarArchivoBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReportesBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReportesBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportesBotonActionPerformed
        reportes.setVisible(true);
    }//GEN-LAST:event_ReportesBotonActionPerformed

    private void analizarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarBotonActionPerformed
        if (!AreaDeCarga.getText().equals("")) {
            //Envio de textArea como parametro
            Automata automata = new Automata(AreaDeCarga);
            reportes = new JFrameReportes(); //Crea un nuevo JFrame
            automata.leerTextArea(); //Labor de Automata
            automata.enviarReportes(); //Envio de Data a JFrameReportes
            textAreaTransicicion.setEditable(false);
            JOptionPane.showMessageDialog(null, "Fin de Analisis de Texto");
        } else {
            JOptionPane.showMessageDialog(null, "No hay texto que analizar, cargue o escriba texto");
        }


    }//GEN-LAST:event_analizarBotonActionPerformed

    private void guardarArchivoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarArchivoBotonActionPerformed
        JFileChooser guardar = new JFileChooser();
        if (guardar.showDialog(null, "Guardar") == JFileChooser.APPROVE_OPTION) {
            File archivo = guardar.getSelectedFile(); //Seleccionar donde guardar texto
            if (archivo.getName().endsWith("txt")) { //Verificacion de formato .txt
                String documento = AreaDeCarga.getText();
                guardarDocumento(archivo, documento);
            } else {
                JOptionPane.showMessageDialog(null, "Formato  de archivo incorrecto, solo .txt");
            }
        }


    }//GEN-LAST:event_guardarArchivoBotonActionPerformed

    //Metodo para Guardar Documento
    public void guardarDocumento(File archivo, String documento) {

        try {
            FileOutputStream salida = new FileOutputStream(archivo); //Solicita un archivo donde guardar el texto
            byte[] bytxt = documento.getBytes();
            salida.write(bytxt); //Escribe texto en el archivo
            JOptionPane.showMessageDialog(null, "Archivo Guardado exitosamente");
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Error al guardar archivo");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error al guardar archivo");
        }
    }

    private void cargaArchivoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaArchivoBotonActionPerformed
        JFileChooser ventanaCarga = new JFileChooser(); //Crea el file chooser, objeto
        
        AreaDeCarga.setText("");
        
        int num = ventanaCarga.showOpenDialog(this); //Abre Ventana para buscar el archivo y lo guardo en int num
        
        //Condiciones de opcion al cargar el archivo correctamente
        if (num == JFileChooser.APPROVE_OPTION) {
            String linea;
            File archivo = ventanaCarga.getSelectedFile(); //Convertir a archivo, el archivo seleccionado en la ventana
            
            try {
                FileReader leerArchivo = new FileReader(archivo);//Leer el archivo
                BufferedReader textoLeido = new BufferedReader(leerArchivo);//Leer linea por linea del contenido del archivo
                
                //Escribir el contenido del archivo linea por linea
                while ((linea = textoLeido.readLine()) != null) { 
                    AreaDeCarga.append(linea + "\n"); //Escribir linea leida, en el Area de Entrada
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Error al cargar el archivo");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al leer el archivo");
            }
        }
    }//GEN-LAST:event_cargaArchivoBotonActionPerformed

    private void buscarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBotonActionPerformed
        //Variables para el metodo Buscar
        String palabra = textoBuscar.getText();
        buscadorPalabra(AreaDeCarga, palabra);
    }//GEN-LAST:event_buscarBotonActionPerformed

    private void limpiarTextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarTextButtonActionPerformed
        AreaDeCarga.setText("");
        textAreaTransicicion.setText("");

    }//GEN-LAST:event_limpiarTextButtonActionPerformed

    private void textoBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoBuscarActionPerformed

    public void buscadorPalabra(JTextArea areaTexto, String palabraParaBuscar) {
        DefaultHighlighter.DefaultHighlightPainter colorAmarillo = new DefaultHighlighter.DefaultHighlightPainter(Color.yellow);
        Highlighter resaltadorAmarillo = areaTexto.getHighlighter();
        resaltadorAmarillo.removeAllHighlights();
        String texto = areaTexto.getText();
        int inicioPalabra = 0;
        String palabraComparada = "";
        
        //Ciclo de recorrido de el TextArea de la entrada de texto
        for (int i = 0; i < texto.length(); i++) {
            if (texto.charAt(i) == ' ' || texto.charAt(i) == '\n') { // Si encuentra un espacio quiere decir que ya termino un palabra
                if (palabraComparada.equals(palabraParaBuscar)) {
                    
                    try {
                        resaltadorAmarillo.addHighlight(inicioPalabra, i, colorAmarillo);
                    } catch (BadLocationException ex) {
                        JOptionPane.showMessageDialog(null, "Error al resaltar busqueda");
                    }
                }
                palabraComparada = "";
                inicioPalabra = i + 1;
            } else {
                palabraComparada += texto.charAt(i);
                if (i == texto.length() - 1) {
                    if (palabraComparada.equals(palabraParaBuscar)) {
                        try {
                            resaltadorAmarillo.addHighlight(inicioPalabra, (i + 1), colorAmarillo);
                        } catch (BadLocationException ex) {
                            JOptionPane.showMessageDialog(null, "Error al resaltar busqueda");
                        }
                    }
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaDeCarga;
    private javax.swing.JButton ReportesBoton;
    private javax.swing.JButton analizarBoton;
    private javax.swing.JButton buscarBoton;
    private javax.swing.JButton cargaArchivoBoton;
    private javax.swing.JButton guardarArchivoBoton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton limpiarTextButton;
    public static javax.swing.JTextArea textAreaTransicicion;
    private javax.swing.JTextField textoBuscar;
    // End of variables declaration//GEN-END:variables
}
